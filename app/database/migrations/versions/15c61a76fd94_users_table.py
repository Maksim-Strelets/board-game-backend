"""users table

Revision ID: 15c61a76fd94
Revises: a47dd8a087d0
Create Date: 2025-03-26 11:13:30.365342
"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '15c61a76fd94'
down_revision = 'a47dd8a087d0'
branch_labels = None
depends_on = None


def upgrade() -> None:
    """
    Upgrade database schema to the next version.

    This method should contain all the changes to be applied when migrating
    to a newer version of the database schema.
    """
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """
    Revert database schema to the previous version.

    This method should contain the necessary steps to undo the changes
    made in the upgrade() method, ensuring database schema can be rolled back.
    """
    op.drop_index("ix_users_email")
    op.drop_index("ix_users_id")
    op.drop_index("ix_users_username")
    op.drop_table("users")